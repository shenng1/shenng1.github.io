{"version":3,"sources":["pages/Auth/logo.png","pages/Auth/index.tsx","pages/Home/dinDon.svg","pages/Home/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Auth","adresses","localStorage","getItem","history","useHistory","push","React","useState","autoComliteLoading","setAutoComliteLoading","isValidAdress","setIsValidAdress","adress","setAdress","message","setMessage","list","setList","location","useLocation","console","log","getAutofillDebounced","useCallback","debounce","e","params","target","value","body","JSON","stringify","fetch","method","headers","then","r","json","data","res","hits","filter","i","is_highway","city","includes","className","src","logo","alt","type","onChange","color","height","length","map","item","onClick","val","locale_names","role","tabIndex","setItem","Home","removeItem","style","to","dindon","Test","Android","showToast","App","basename","path","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b6429d3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e943b7aa.png\";","import React, { useCallback } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport debounce from 'lodash.debounce';\nimport Loader from 'react-loader-spinner';\n\nimport logo from './logo.png';\n\nimport './style.scss';\n\nfunction Auth() {\n  const adresses = localStorage.getItem('adresses');\n  const history = useHistory();\n  if (adresses) history.push('/');\n\n  const [autoComliteLoading, setAutoComliteLoading] = React.useState(false);\n  const [isValidAdress, setIsValidAdress] = React.useState(false);\n  const [adress, setAdress] = React.useState('');\n  const [message, setMessage] = React.useState('');\n  const [list, setList] = React.useState([]);\n\n  const location = useLocation();\n  console.log(location);\n  \n  const getAutofill = (e:any) => {\n    console.log('getAutofill');\n    \n    const paramsObj = {\n      hitsPerPage: '10',\n      language: 'ru',\n\n      // query: '%D0%9D%D0%BE%D0%B2%D0%BE%D1%81%D0%B5%D0%BB%D1%8C%D1%81%D0%BA%D0%BE%D0%B3%D0%BE\"',\n      query: e.target.value,\n      //  +  ' Одесса',\n      countries: 'ua',\n      type: 'address',\n    };\n    /* const params = Object.keys(paramsObj).map(key => key + '=' + paramsObj[key]).join('&'); */\n    const params = 'hitsPerPage=' + paramsObj.hitsPerPage + '&' \n                    + 'language=' + paramsObj.language + '&'\n                    + 'query=' + paramsObj.query + '&'\n                    + 'type=' + paramsObj.type + '&'\n                    + 'countries=' + paramsObj.countries;\n    // const test = '{\"params\":\"hitsPerPage=5&language=ru&query=%D0%9D\n    // %D0%BE%D0%B2%D0%BE%D1%81%D0%B5%D0%BB%D1%8C%D1%81%D0%BA%D0%BE%D0%B3%D0%BE\"}';\n    // console.log(params);\n    // console.log(test);\n    const body = JSON.stringify({ params });\n    const options = {\n      body,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8',\n        'X-Algolia-Application-Id': 'pl5TUITFNEHW',\n        'X-Algolia-API-Key': '02a1caebac8f9f92dc638f89242e443f',\n      },\n    };\n    fetch('https://places-dsn.algolia.net/1/places/query', options).then((r) => r.json())\n      .then((data:any) => {\n        console.log(data);\n        const res = data.hits.filter((i:any) => {\n          if (!i.is_highway) return;\n          if (i.city && !['Одесская область', 'Одесса'].includes(i.city[0])) return;\n          return 1;\n        });\n        setAutoComliteLoading(false);\n        console.log(res);\n        \n        setList(res);\n      });\n  };\n  \n  const getAutofillDebounced:any = useCallback(debounce(getAutofill, 400), []);\n\n  const onChange = (e:any) => {\n    setAdress(e.target.value);\n    setAutoComliteLoading(true);\n    setIsValidAdress(false);\n    setMessage('');\n    getAutofillDebounced(e);\n  };\n\n  const clickHandler = () => {\n    // history?.push('/');\n\n    if (!isValidAdress) return setMessage('Выберите адресс из подсказки');\n\n    localStorage.setItem('adresses', JSON.stringify([adress]));\n    setAutoComliteLoading(true);\n    // window.location.href = '/komunation/';\n    history?.push('/');\n  };\n\n  const onClickAutoComlite = (val:string) => {\n    setAdress(val);\n    setIsValidAdress(true);\n  };\n\n  // const showAutoComplite = list.length > 0 || autoComliteLoading;\n\n  return (\n    <main className=\"container Auth\">\n      <img src={logo} alt=\"\" />\n\n      <span>Добавте ваш адресс</span>\n\n      <span className=\"town\">г. Одесса</span>\n\n      <div className=\"input_contaimer\">\n        <input \n          type=\"text\"\n          value={adress}\n          onChange={onChange}\n        />\n        { message && <div className=\"message\">{message}</div> }\n      </div>\n      \n      { adress && !isValidAdress && (\n        <div className=\"auto_complite\">\n          <div className={'list' + (autoComliteLoading ? ' mid' : '')}>\n\n            { autoComliteLoading && <Loader type=\"Puff\" color=\"#00BFFF\" height={50} /> }\n\n            { list.length === 0 && !autoComliteLoading && <div>нет результатов</div> }\n\n            { !autoComliteLoading && list.map((item:any, i) => (\n              <div key={i} onClick={() => onClickAutoComlite(item.locale_names)} role=\"button\" tabIndex={1 + i}> \n                { item.locale_names + ', г.Одесса' } \n              </div>\n            ))}\n\n          </div>\n        </div>\n      )}\n      \n      <span>и получайте уведомления о доступности комунальных услуг заблаговременно</span>\n\n      <button type=\"button\" onClick={clickHandler} className={!isValidAdress ? 'disabled' : ''}>Далее </button>\n    </main>\n  );\n}\n\nexport default Auth;\n","export default __webpack_public_path__ + \"static/media/dinDon.9a08fb76.svg\";","import React from 'react';\nimport { useHistory, Link } from 'react-router-dom';\n\nimport dindon from './dinDon.svg';\nimport './style.scss';\n\nfunction Home() {\n  const adresses = localStorage.getItem('adresses');\n  const history = useHistory();\n  if (!adresses) history.push('/auth');\n\n  const mock = {\n    id: 'e2d0cab8-9b74-418f-95b8-efd0c3b4fb06',\n    date: '2021-02-13T17:36:22.144Z',\n    district: 'Центральный РЭС',\n    town: 'Одеса',\n    street: 'Деволанівський узвіз',\n    home: '1, 12, ',\n    start: '13/02/2021  06:16:00',\n    end: '13/02/2021  23:00:00',\n  };\n\n  return (\n    <main className=\"container Home\">\n      <div className=\"back_lane_1\">frfr1</div>\n      <div className=\"back_lane_2\">frfr2</div>\n\n      <div className=\"content\">\n        ваши адреса\n        <hr />\n        { adresses }\n        <hr />\n        <button type=\"button\" onClick={() => { localStorage.removeItem('adresses'); history.push('/auth'); }}>\n          <span style={{ color: '#000' }}>clear</span>\n        </button>\n        <hr />\n        <Link to=\"/test\"><button type=\"button\"> to test </button></Link>\n\n      </div>\n\n      <div className=\"menu_down\">\n        <button type=\"button\" className=\"buttonHome\">\n          <img src={dindon} alt=\"\" />\n        </button>\n        <button type=\"button\" className=\"buttonHome\">2</button>\n        <button type=\"button\" className=\"buttonHome\">3</button>\n        <button type=\"button\" className=\"buttonHome\">4</button>\n        <button type=\"button\" className=\"buttonHome\">5</button>\n      </div>\n    </main>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect, Link } from 'react-router-dom';\n\nimport Auth from './pages/Auth';\nimport Home from './pages/Home';\n\nimport './App.css';\n\ndeclare const Android: any;\n\nconst Test = () => {\n  const onClick = () => { \n    Android.showToast('toast');\n  };\n\n  return (\n    <main>\n      <button type=\"button\" onClick={onClick}> send push </button>\n      <hr />\n      {Android}\n      <hr />\n      <Link to=\"/\"><button type=\"button\"> to home </button></Link>\n      <hr />\n\n    </main>\n  );\n};\n\nfunction App() {\n  const adresses = localStorage.getItem('adresses');\n\n  return (\n    <Router basename=\"/komunation\">\n      <Switch>\n        <Route path=\"/auth\">\n          { adresses ? <Redirect to=\"/\" /> : <Auth /> }\n        </Route>\n        <Route exact path=\"/\" render={() => <Home />} />\n        <Route exact path=\"/test\" render={() => <Test />} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}