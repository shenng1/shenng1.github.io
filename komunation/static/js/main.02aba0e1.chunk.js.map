{"version":3,"sources":["socket/index.tsx","Android/index.tsx","pages/Auth/Bored.svg","pages/Auth/index.tsx","pages/Home/dinDon.svg","pages/Home/renew.svg","pages/Home/options.svg","pages/Home/archive.svg","pages/Home/lupe.svg","pages/Home/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["socket","showNotification","title","message","console","log","Android","showToast","e","Auth","adresses","localStorage","getItem","history","useHistory","push","React","useState","autoComliteLoading","setAutoComliteLoading","isValidAdress","setIsValidAdress","adress","setAdress","setMessage","list","setList","getAutofillDebounced","useLocation","useCallback","debounce","params","target","value","body","JSON","stringify","fetch","method","headers","then","r","json","data","res","hits","filter","i","is_highway","city","includes","className","src","logo","alt","type","onChange","color","height","length","map","item","onClick","val","locale_names","role","tabIndex","setItem","Home","removeItem","style","to","options","lupe","renew","dindon","archive","Test","err","setErr","stack","App","useEffect","toastLoaderId","toast","loading","storage","address","parse","io","auth","onAny","event","args","on","dismiss","success","t","m","initSocket","basename","path","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02aba0e1.chunk.js","sourcesContent":["import React from 'react';\nimport { io } from 'socket.io-client';\nimport toast from 'react-hot-toast';\n\nimport { showNotification } from '../Android';\n\ntype NotificationType = {\n  t: string,\n  m: string,\n};\nlet socket:any;\nconst socketUrl = 'ws://localhost:8888';\n\nconst initSocket = () => {\n  console.log('WS: init socket');\n\n  const toastLoaderId = toast.loading('Connecting...');\n  const storage:string = localStorage.getItem('adresses') || '[]';\n  let address = '';\n\n  try {\n    [address] = JSON.parse(storage);\n  } catch (e) {\n    console.log('invalid storage data');\n  }\n\n  socket = io(socketUrl, { auth: { address } });\n\n  socket.onAny((event:any, ...args:any) => {\n    console.log(event, args);\n  });\n\n  socket.on('connect', () => {\n    console.log('WS: connected');\n    toast.dismiss(toastLoaderId);\n    toast.success('Connected');\n  });\n\n  socket.on('notify', (data:NotificationType) => {\n    toast(<span>{data.t} <br /> {data.m}</span>);\n    showNotification(data.t, data.m);\n  });\n};\n\nconst wsSend = (chanel:string, data:object) => {\n  socket.emit(chanel, data);\n};\n\nexport { initSocket, wsSend };\n","declare const Android: any;\n\nconst showNotification = (title:String, message:String) => {\n    console.log('showNotification', title, message);\n    try {\n        Android.showToast(title, message);\n    } catch (e) {\n        console.log('Android functions not found');\n        console.log({ e });\n    }\n};\n\nexport default showNotification;\nexport { showNotification };\n","export default __webpack_public_path__ + \"static/media/Bored.508cb39e.svg\";","import React, { useCallback } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport debounce from 'lodash.debounce';\nimport Loader from 'react-loader-spinner';\n\nimport logo from './Bored.svg';\n\nimport './style.scss';\n\nfunction Auth() {\n  const adresses = localStorage.getItem('adresses');\n  const history = useHistory();\n  if (adresses) history.push('/');\n\n  const [autoComliteLoading, setAutoComliteLoading] = React.useState(false);\n  const [isValidAdress, setIsValidAdress] = React.useState(false);\n  const [adress, setAdress] = React.useState('');\n  const [message, setMessage] = React.useState('');\n  const [list, setList] = React.useState([]);\n\n  const location = useLocation();\n  \n  const getAutofill = (e:any) => {\n    console.log('getAutofill');\n    \n    const paramsObj = {\n      hitsPerPage: '10',\n      language: 'ru',\n\n      // query: '%D0%9D%D0%BE%D0%B2%D0%BE%D1%81%D0%B5%D0%BB%D1%8C%D1%81%D0%BA%D0%BE%D0%B3%D0%BE\"',\n      query: e.target.value,\n      //  +  ' Одесса',\n      countries: 'ua',\n      type: 'address',\n    };\n    /* const params = Object.keys(paramsObj).map(key => key + '=' + paramsObj[key]).join('&'); */\n    const params = 'hitsPerPage=' + paramsObj.hitsPerPage + '&' \n                    + 'language=' + paramsObj.language + '&'\n                    + 'query=' + paramsObj.query + '&'\n                    + 'type=' + paramsObj.type + '&'\n                    + 'countries=' + paramsObj.countries;\n    // const test = '{\"params\":\"hitsPerPage=5&language=ru&query=%D0%9D\n    // %D0%BE%D0%B2%D0%BE%D1%81%D0%B5%D0%BB%D1%8C%D1%81%D0%BA%D0%BE%D0%B3%D0%BE\"}';\n    // console.log(params);\n    // console.log(test);\n    const body = JSON.stringify({ params });\n    const options = {\n      body,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8',\n        'X-Algolia-Application-Id': 'pl5TUITFNEHW',\n        'X-Algolia-API-Key': '02a1caebac8f9f92dc638f89242e443f',\n      },\n    };\n    fetch('https://places-dsn.algolia.net/1/places/query', options).then((r) => r.json())\n      .then((data:any) => {\n        console.log(data);\n        const res = data.hits.filter((i:any) => {\n          if (!i.is_highway) return;\n          if (i.city && !['Одесская область', 'Одесса'].includes(i.city[0])) return;\n          return 1;\n        });\n        setAutoComliteLoading(false);\n        console.log(res);\n        \n        setList(res);\n      });\n  };\n  \n  const getAutofillDebounced:any = useCallback(debounce(getAutofill, 400), []);\n\n  const onChange = (e:any) => {\n    setAdress(e.target.value);\n    setAutoComliteLoading(true);\n    setIsValidAdress(false);\n    setMessage('');\n    getAutofillDebounced(e);\n  };\n\n  const clickHandler = () => {\n    // history?.push('/');\n\n    if (!isValidAdress) return setMessage('Выберите адресс из подсказки');\n\n    localStorage.setItem('adresses', JSON.stringify(adress));\n    setAutoComliteLoading(true);\n    // window.location.href = '/komunation/';\n    history?.push('/');\n  };\n\n  const onClickAutoComlite = (val:string) => {\n    setAdress(val);\n    setIsValidAdress(true);\n  };\n\n  // const showAutoComplite = list.length > 0 || autoComliteLoading;\n\n  return (\n    <main className=\"container Auth\">\n      <img src={logo} alt=\"\" />\n\n      <span>Добавте ваш адресс</span>\n\n      <span className=\"town\">г. Одесса</span>\n\n      <div className=\"input_contaimer\">\n        <input \n          type=\"text\"\n          value={adress}\n          onChange={onChange}\n        />\n        { message && <div className=\"message\">{message}</div> }\n      </div>\n      \n      { adress && !isValidAdress && (\n        <div className=\"auto_complite\">\n          <div className={'list' + (autoComliteLoading ? ' mid' : '')}>\n\n            { autoComliteLoading && <Loader type=\"Puff\" color=\"#00BFFF\" height={50} /> }\n\n            { list.length === 0 && !autoComliteLoading && <div>нет результатов</div> }\n\n            { !autoComliteLoading && list.map((item:any, i) => (\n              <div key={i} onClick={() => onClickAutoComlite(item.locale_names)} role=\"button\" tabIndex={1 + i}> \n                { item.locale_names + ', г.Одесса' } \n              </div>\n            ))}\n\n          </div>\n        </div>\n      )}\n      \n      <span>и получайте уведомления о доступности комунальных услуг заблаговременно</span>\n\n      <button type=\"button\" onClick={clickHandler} className={!isValidAdress ? 'disabled' : ''}>Далее </button>\n    </main>\n  );\n}\n\nexport default Auth;\n","export default __webpack_public_path__ + \"static/media/dinDon.03d36c1f.svg\";","export default __webpack_public_path__ + \"static/media/renew.f1e204ff.svg\";","export default __webpack_public_path__ + \"static/media/options.f3713510.svg\";","export default __webpack_public_path__ + \"static/media/archive.e4003703.svg\";","export default __webpack_public_path__ + \"static/media/lupe.d9afe77b.svg\";","import React from 'react';\nimport { useHistory, Link } from 'react-router-dom';\n\nimport dindon from './dinDon.svg';\nimport renew from './renew.svg';\nimport options from './options.svg';\nimport archive from './archive.svg';\nimport lupe from './lupe.svg';\nimport './style.scss';\n\nfunction Home() {\n  const adresses = localStorage.getItem('adresses');\n  const history = useHistory();\n  if (!adresses) history.push('/auth');\n\n  const mock = {\n    id: 'e2d0cab8-9b74-418f-95b8-efd0c3b4fb06',\n    date: '2021-02-13T17:36:22.144Z',\n    district: 'Центральный РЭС',\n    town: 'Одеса',\n    street: 'Деволанівський узвіз',\n    home: '1, 12, ',\n    start: '13/02/2021  06:16:00',\n    end: '13/02/2021  23:00:00',\n  };\n\n  return (\n    <main className=\"container Home\">\n      <div className=\"back_lane_1\" />\n      <div className=\"back_lane_2\" />\n\n      <div className=\"content\">\n        ваши адреса\n        <hr />\n        { adresses }\n        <hr />\n        <button type=\"button\" onClick={() => { localStorage.removeItem('adresses'); history.push('/auth'); }}>\n          <span style={{ color: '#000' }}>clear</span>\n        </button>\n        <hr />\n        <Link to=\"/test\"><button type=\"button\"> to test </button></Link>\n\n      </div>\n\n      <div className=\"menu_down\">\n        <button type=\"button\" className=\"buttonHome\">\n          <img src={options} alt=\"\" />\n        </button>\n        <button type=\"button\" className=\"buttonHome\">\n          <img src={lupe} alt=\"\" />\n        </button>\n        <button type=\"button\" className=\"buttonHome\">\n          <img src={renew} alt=\"\" />\n        </button>\n        <button type=\"button\" className=\"buttonHome\">\n          <img src={dindon} alt=\"\" />\n        </button>\n        <button type=\"button\" className=\"buttonHome\">\n          <img src={archive} alt=\"\" />\n        </button>\n      </div>\n    </main>\n  );\n}\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect, Link } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\n\nimport { initSocket, wsSend } from './socket';\nimport Auth from './pages/Auth';\nimport Home from './pages/Home';\n\nimport './App.scss';\n\ndeclare const Android: any;\n\nconst Test = () => {\n  const [err, setErr] = useState('empty');\n  const onClick = () => {\n    try {\n      Android.showToast('Отключают свет!!!', 'Адрес Самарская 28');\n    } catch (e) {\n      console.log('Android functions not found');\n      console.log({ e });\n      setErr(e.stack);\n    }\n  };\n\n  return (\n    <main>\n      <button type=\"button\" onClick={onClick}> send push </button>\n      <hr />\n      err: \n      {err}\n      <hr />\n      <Link to=\"/\"><button type=\"button\"> to home </button></Link>\n    </main>\n  );\n};\n\nfunction App() {\n  const adresses = localStorage.getItem('adresses');\n\n  useEffect(() => {\n    initSocket();\n  }, []);\n\n  return (\n    <>\n      <Router basename=\"/komunation\">\n        <Switch>\n          <Route path=\"/auth\">\n            { adresses ? <Redirect to=\"/\" /> : <Auth /> }\n          </Route>\n          <Route exact path=\"/\" render={() => <Home />} />\n          <Route exact path=\"/test\" render={() => <Test />} />\n        </Switch>\n      </Router>\n\n      <Toaster />\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}