{"version":3,"sources":["pages/Auth/logo.png","pages/Auth/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Auth","React","useState","login","setLogin","list","setList","getAutofillDebounced","useCallback","debounce","e","console","log","params","target","value","body","JSON","stringify","fetch","method","headers","then","r","json","data","res","hits","filter","i","is_highway","city","includes","className","src","logo","alt","type","onChange","map","item","locale_names","onClick","localStorage","setItem","App","basename","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAAe,MAA0B,iC,MC0F1BA,MAlFf,WAAiB,IAAD,EACYC,IAAMC,SAAS,IAD3B,mBACPC,EADO,KACAC,EADA,OAEUH,IAAMC,SAAS,IAFzB,mBAEPG,EAFO,KAEDC,EAFC,KA+CRC,EAA2BC,sBAAYC,KA3CzB,SAACC,GACnBC,QAAQC,IAAI,YACZ,IAWMC,EAAS,eAVA,KAUA,aATH,KASG,UANNH,EAAEI,OAAOC,MAMH,SAHP,UAGO,cAJF,KAUbJ,QAAQC,IAAIC,GACZF,QAAQC,IAFK,+HAGb,IAAMI,EAAOC,KAAKC,UAAU,CAAEL,WAU9BM,MAAM,gDATU,CACdH,OACAI,OAAQ,OACRC,QAAS,CACP,eAAgB,kCAChB,2BAA4B,eAC5B,oBAAqB,sCAGuCC,MAAK,SAACC,GAAQ,OAAOA,EAAEC,UACtFF,MAAK,SAACG,GACLd,QAAQC,IAAIa,GACZ,IAAMC,EAAMD,EAAKE,KAAKC,QAAO,SAACC,GAC5B,GAAKA,EAAEC,cACHD,EAAEE,MAAS,CAAC,8FAAoB,wCAAUC,SAASH,EAAEE,KAAK,KAC9D,OAAO,KAETzB,EAAQoB,QAIuD,KAAM,IAWzE,OACE,uBAAMO,UAAU,iBAAhB,UACE,qBAAKC,IAAKC,EAAMC,IAAI,KAEpB,sBAAMH,UAAU,OAAhB,0DAEA,uBACEI,KAAK,OACLC,SAjBW,SAAC5B,GAChBN,EAASM,EAAEI,OAAOC,OAClBR,EAAqBG,MAkBjBL,EAAKkC,KAAI,SAACC,GACV,OACE,oCAAQA,EAAKC,aAAb,KAA+BD,EAAKT,KAApC,UAIJ,2aAEA,wBAAQM,KAAK,SAASK,QAvBL,WACnBC,aAAaC,QAAQ,OAAQzC,IAsB3B,iD,MC9CS0C,MA5Bf,WACE,OACE,cAAC,IAAD,CAAQC,SAAS,cAAjB,SAcE,cAAC,IAAD,UAIE,cAAC,IAAD,CAAOC,KAAK,IAAZ,SACE,cAAC,EAAD,WChBKC,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAEnB,IADL6B,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCLdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.da30056a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e943b7aa.png\";","import React, { useCallback } from 'react';\nimport debounce from 'lodash.debounce';\n/*eslint-disable*/\n\nimport logo from './logo.png';\n\nimport './style.css';\n\nfunction Auth() {\n  const [login, setLogin] = React.useState('');\n  const [list, setList] = React.useState([]);\n\n  const getAutofill = (e:any) => {\n    console.log('autofill');\n    const paramsObj = {\n      hitsPerPage: '10',\n      language: 'ru',\n\n      // query: '%D0%9D%D0%BE%D0%B2%D0%BE%D1%81%D0%B5%D0%BB%D1%8C%D1%81%D0%BA%D0%BE%D0%B3%D0%BE\"',\n      query: e.target.value,\n      //  +  ' Одесса',\n      countries: 'ua',\n      type: 'address',\n    };\n    /* const params = Object.keys(paramsObj).map(key => key + '=' + paramsObj[key]).join('&'); */\n    const params = 'hitsPerPage=' + paramsObj.hitsPerPage + '&' + \n                    'language=' + paramsObj.language + '&' + \n                    'query=' + paramsObj.query + '&' + \n                    'type=' + paramsObj.type + '&' + \n                    'countries=' + paramsObj.countries;\n    const test = '{\"params\":\"hitsPerPage=5&language=ru&query=%D0%9D%D0%BE%D0%B2%D0%BE%D1%81%D0%B5%D0%BB%D1%8C%D1%81%D0%BA%D0%BE%D0%B3%D0%BE\"}';\n    console.log(params);\n    console.log(test);\n    const body = JSON.stringify({ params });\n    const options = {\n      body,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8',\n        'X-Algolia-Application-Id': 'pl5TUITFNEHW',\n        'X-Algolia-API-Key': '02a1caebac8f9f92dc638f89242e443f',\n      },\n    };\n    fetch('https://places-dsn.algolia.net/1/places/query', options).then((r) => { return r.json(); })\n    .then((data:any) => {\n      console.log(data);\n      const res = data.hits.filter((i:any) => {\n        if (!i.is_highway) return;\n        if (i.city && ![\"Одесская область\", \"Одесса\"].includes(i.city[0])) return;\n        return true;\n      });\n      setList(res);\n    });\n  };\n  \n  const getAutofillDebounced:any = useCallback(debounce(getAutofill, 400), []);\n\n  const onChange = (e:any) => {\n    setLogin(e.target.value);\n    getAutofillDebounced(e);\n  };\n\n  const clickHandler = () => {\n    localStorage.setItem('test', login);\n  };\n\n  return (\n    <main className=\"container Auth\">\n      <img src={logo} alt=\"\" />\n\n      <span className=\"town\">г. Одесса</span>\n\n      <input \n        type=\"text\"\n        onChange={onChange}\n      />\n\n      { list.map((item:any) => {\n        return (\n          <div> { item.locale_names }, { item.city } </div>\n        )\n      })}\n\n      <span>и получайте уведомления о доступности коменальных услуг заблаговременно</span>\n\n      <button type=\"button\" onClick={clickHandler}>Далее </button>\n    </main>\n  );\n}\n\nexport default Auth;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Auth from './pages/Auth';\n\nimport './App.css';\n\n// function Home() {\n//   return <h2>Home</h2>;\n// }\n\nfunction App() {\n  return (\n    <Router basename=\"/komunation\">\n      {/* <nav style={{ position: 'absolute' }}>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/auth\">Auth</Link>\n          </li>\n        </ul>\n      </nav> */}\n\n      {/* A <Switch> looks through its children <Route>s and\n          renders the first one that matches the current URL. */}\n      <Switch>\n        {/* <Route path=\"/auth\">\n          <Auth />\n        </Route> */}\n        <Route path=\"/\">\n          <Auth />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}