{"version":3,"sources":["pages/Auth/logo.png","pages/Auth/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Auth","history","useHistory","React","useState","autoComliteLoading","setAutoComliteLoading","isValidAdress","setIsValidAdress","adress","setAdress","message","setMessage","list","setList","getAutofillDebounced","useCallback","debounce","e","console","log","params","target","value","body","JSON","stringify","fetch","method","headers","then","r","json","data","res","hits","filter","i","is_highway","city","includes","className","src","logo","alt","type","onChange","color","height","length","map","item","onClick","val","locale_names","role","tabIndex","localStorage","setItem","window","location","href","push","Home","adresses","getItem","style","App","basename","path","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9150413f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e943b7aa.png\";","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport debounce from 'lodash.debounce';\nimport Loader from 'react-loader-spinner';\n\nimport logo from './logo.png';\n\nimport './style.css';\n\nfunction Auth() {\n  const history = useHistory();\n\n  const [autoComliteLoading, setAutoComliteLoading] = React.useState(false);\n  const [isValidAdress, setIsValidAdress] = React.useState(false);\n  const [adress, setAdress] = React.useState('');\n  const [message, setMessage] = React.useState('');\n  const [list, setList] = React.useState([]);\n\n  const getAutofill = (e:any) => {\n    console.log('getAutofill');\n    \n    const paramsObj = {\n      hitsPerPage: '10',\n      language: 'ru',\n\n      // query: '%D0%9D%D0%BE%D0%B2%D0%BE%D1%81%D0%B5%D0%BB%D1%8C%D1%81%D0%BA%D0%BE%D0%B3%D0%BE\"',\n      query: e.target.value,\n      //  +  ' Одесса',\n      countries: 'ua',\n      type: 'address',\n    };\n    /* const params = Object.keys(paramsObj).map(key => key + '=' + paramsObj[key]).join('&'); */\n    const params = 'hitsPerPage=' + paramsObj.hitsPerPage + '&' \n                    + 'language=' + paramsObj.language + '&'\n                    + 'query=' + paramsObj.query + '&'\n                    + 'type=' + paramsObj.type + '&'\n                    + 'countries=' + paramsObj.countries;\n    // const test = '{\"params\":\"hitsPerPage=5&language=ru&query=%D0%9D\n    // %D0%BE%D0%B2%D0%BE%D1%81%D0%B5%D0%BB%D1%8C%D1%81%D0%BA%D0%BE%D0%B3%D0%BE\"}';\n    // console.log(params);\n    // console.log(test);\n    const body = JSON.stringify({ params });\n    const options = {\n      body,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8',\n        'X-Algolia-Application-Id': 'pl5TUITFNEHW',\n        'X-Algolia-API-Key': '02a1caebac8f9f92dc638f89242e443f',\n      },\n    };\n    fetch('https://places-dsn.algolia.net/1/places/query', options).then((r) => r.json())\n      .then((data:any) => {\n        console.log(data);\n        const res = data.hits.filter((i:any) => {\n          if (!i.is_highway) return;\n          if (i.city && !['Одесская область', 'Одесса'].includes(i.city[0])) return;\n          return 1;\n        });\n        setAutoComliteLoading(false);\n        console.log(res);\n        \n        setList(res);\n      });\n  };\n  \n  const getAutofillDebounced:any = useCallback(debounce(getAutofill, 400), []);\n\n  const onChange = (e:any) => {\n    setAdress(e.target.value);\n    setAutoComliteLoading(true);\n    setIsValidAdress(false);\n    getAutofillDebounced(e);\n  };\n\n  const clickHandler = () => {\n    if (!isValidAdress) return setMessage('Выберите адресс из подсказки');\n\n    localStorage.setItem('adresses', JSON.stringify([adress]));\n    setAutoComliteLoading(true);\n    window.location.href = '/komunation/';\n    history?.push('/');\n  };\n\n  const onClickAutoComlite = (val:string) => {\n    setAdress(val);\n    setIsValidAdress(true);\n  };\n\n  // const showAutoComplite = list.length > 0 || autoComliteLoading;\n\n  return (\n    <main className=\"container Auth\">\n      <img src={logo} alt=\"\" />\n\n      <span>Добавте ваш адресс</span>\n\n      <span className=\"town\">г. Одесса</span>\n\n      <div className=\"input_contaimer\">\n        <input \n          type=\"text\"\n          value={adress}\n          onChange={onChange}\n        />\n        { message && <div className=\"message\">{message}</div> }\n      </div>\n      \n      { adress && !isValidAdress && (\n        <div className=\"auto_complite\">\n          <div className={'list' + (autoComliteLoading ? ' mid' : '')}>\n\n            { autoComliteLoading && <Loader type=\"Puff\" color=\"#00BFFF\" height={50} /> }\n\n            { list.length === 0 && !autoComliteLoading && <div>нет результатов</div> }\n\n            { !autoComliteLoading && list.map((item:any, i) => (\n              <div key={i} onClick={() => onClickAutoComlite(item.locale_names)} role=\"button\" tabIndex={1 + i}> \n                { item.locale_names + ', г.Одесса' } \n              </div>\n            ))}\n\n          </div>\n        </div>\n      )}\n      \n      <span>и получайте уведомления о доступности комунальных услуг заблаговременно</span>\n\n      <button type=\"button\" onClick={clickHandler} className={!isValidAdress ? 'disabled' : ''}>Далее </button>\n    </main>\n  );\n}\n\nexport default Auth;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\n\nimport Auth from './pages/Auth';\n\nimport './App.css';\n\nfunction Home() {\n  const adresses = localStorage.getItem('adresses');\n\n  return (\n    <h2 style={{ color: '#000' }}>\n      ваши адреса\n      <hr /> \n      { adresses }\n    </h2>\n  );\n}\n\nfunction App() {\n  const adresses = localStorage.getItem('adresses');\n  console.log(adresses);\n\n  return (\n    <Router basename=\"/komunation\">\n      {/* <nav style={{ position: 'absolute' }}>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/auth\">Auth</Link>\n          </li>\n        </ul>\n      </nav> */}\n\n      {/* A <Switch> looks through its children <Route>s and\n          renders the first one that matches the current URL. */}\n      <Switch>\n        <Route path=\"/auth\">\n          { adresses ? <Redirect to=\"/\" /> : <Auth /> }\n        </Route>\n        <Route path=\"/\">\n          { adresses ? <Home /> : <Redirect to=\"/auth\" /> }\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}